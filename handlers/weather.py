import aiohttp
from aiogram import Router, types
from aiogram.filters import Command

from config import api_key

# –°–æ–∑–¥–∞–Ω–∏–µ —Ä–æ—É—Ç–µ—Ä–∞ –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –µ–≥–æ
router = Router(name=__name__)


@router.message(Command('weather', prefix='/', ignore_case=True))
async def cmd_weather(message: types.Message):
    args = message.text.split(maxsplit=1)
    city = args[1] if len(args) > 1 else None

    if not city:
        await message.answer("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ –≥–æ—Ä–æ–¥. –ù–∞–ø—Ä–∏–º–µ—Ä: /weather –ú–æ—Å–∫–≤–∞")
        return

    weather_data = await get_weather(city)
    await message.answer(weather_data)


async def get_weather(city: str) -> str:
    url = f"http://api.openweathermap.org/data/2.5/weather?q={city}&appid={api_key}&units=metric&lang=ru"
    async with aiohttp.ClientSession() as session:
        async with session.get(url) as response:
            data = await response.json()

    if data["cod"] != 200:
        return "–ì–æ—Ä–æ–¥ –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑."

    weather = data["weather"][0]["description"]
    temp = data["main"]["temp"]
    humidity = data["main"]["humidity"]
    wind = data["wind"]["speed"]

    return (f"–ü–æ–≥–æ–¥–∞ <b>{city.lower().capitalize()}</b>\n"
            f"‚òÅÔ∏è–ü–æ–≥–æ–¥–∞: <b>{weather}</b>\n"
            f"üå°–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: <b>{temp}¬∞C</b>\n"
            f"üíß–í–ª–∞–∂–Ω–æ—Å—Ç—å: <b>{humidity}%</b>\n"
            f"üí®–°–∫–æ—Ä–æ—Å—Ç—å –≤–µ—Ç—Ä–∞: <b>{wind} –º/—Å</b>")